AWSTemplateFormatVersion: "2010-09-09"

Mappings: 
  RegionMap: 
    us-east-1: 
      "HVM64": "ami-0c9b9aa8481ea3a8b"

Resources:

  ## Security group for NirvaShare services enabling port 8080 and 8081
  ## Port 22 for console access
  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: NirvaShare security group
      GroupName: WebSecurityGroup     
#      VpcId: vpc-abc01234
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        -
          IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        -
          IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: 0.0.0.0/0
 
  ## EC2 Instance
  WebInstance:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        -
          DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: 100
            VolumeType: gp2
      InstanceType: t2.medium
#      ImageId: ami-04505e74c0741db8d
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
#      KeyName: my-key
      Monitoring: false
      SecurityGroupIds:
        - !Ref WebSecurityGroup
      UserData:
#	* Installs docker and docker-conpose community edition
#	* Installs postgres database as docker service.
#	* Sets randomized database password.
#	* Installs NirvaShare Admin Console as docker service.
#	* Sets default admin password as EC2 instance id
#	* Installs NirvaShare User application as docker service.
#
        Fn::Base64: 
          !Sub |
            #!/bin/bash            
            curl -s https://raw.githubusercontent.com/nirvashare/nirvashare/main/linux/ubuntu/vendors/aws/install_nirvashare.sh -o ns_install.sh && bash ns_install.sh && rm -f ns_install.sh
      Tags:
        -
          Key: Name
          Value: NirvaShare
  

