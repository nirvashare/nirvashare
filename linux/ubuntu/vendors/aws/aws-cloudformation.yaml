AWSTemplateFormatVersion: "2010-09-09"

Mappings: 
  RegionMap: 
    us-east-1: 
      "HVM64": "ami-0360c520857e3138f"

Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t2.medium
    Description: Instance type    
    AllowedValues:
      - t2.medium
      - t2.large
      - t2.xlarge      
      - t3.medium
      - t3.large
      - t3.xlarge

  CidrBlock:
    Type: String
    Description: Enter the CIDR block (e.g., 203.0.113.45/32) for SSH and web access. 
      To allow all, use 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid CIDR block such as x.x.x.x/32 or 0.0.0.0/0

  SSHKey:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Key pair to SSH into the EC2 instance

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select the VPC where this stack will be deployed
    
Resources:
  ## Security group for NirvaShare services enabling port 8080 and 8081
  ## Port 22 for console access
  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: NirvaShare security group
      GroupName: WebSecurityGroup
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: !Ref CidrBlock
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  ## EC2 Instance
  WebInstance:
    Type: AWS::EC2::Instance
    Properties:
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: 100
            VolumeType: gp2
      InstanceType: !Ref InstanceTypeParameter
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      KeyName: !Ref SSHKey
      Monitoring: false
      SecurityGroupIds:
        - !Ref WebSecurityGroup
      UserData:
#	* Installs docker and docker-conpose community edition
#	* Installs postgres database as docker service.
#	* Sets randomized database password.
#	* Installs NirvaShare Admin Console as docker service.
#	* Sets default admin password as EC2 instance id
#	* Installs NirvaShare User application as docker service.
#
      
        Fn::Base64: 
          !Sub |
            #!/bin/bash            
            curl -s https://raw.githubusercontent.com/nirvashare/nirvashare/main/linux/ubuntu/vendors/aws/install_nirvashare.sh -o ns_install.sh && bash ns_install.sh && rm -f ns_install.sh
      Tags:
        - Key: Name
          Value: NirvaShare

