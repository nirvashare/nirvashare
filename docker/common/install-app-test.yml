version: "3"
services:
  admin:
    image: 'nirvato/nirvashare-admin-test:latest'
    container_name: 'nirvashare_admin_test'
    networks:
      - nirvashare
    restart: always
    ports:
#      # Public HTTP Port:
      - '8080:8080'
    environment:
      ns_db_jdbc_url: "jdbc:postgresql://nirvashare_database_test:5432/postgres"
      ns_db_username: "nirvashare"
      ns_db_password_file: "/run/secrets/db_password"

    secrets:
      - db_password

    volumes:
      - /var/nirvashare:/var/nirvashare
     
    depends_on:
      - db


  userapp:
    image: 'nirvato/nirvashare-userapp-test:latest'
    container_name: 'nirvashare_userapp_test'
    networks:
      - nirvashare
    restart: always
    ports:
#      # Public HTTP Port:
      - '8081:8080'
    environment:
      ns_db_jdbc_url: "jdbc:postgresql://nirvashare_database_test:5432/postgres"
      ns_db_username: "nirvashare"
      ns_db_password_file: "/run/secrets/db_password"

    secrets:
      - db_password

    volumes:
      - /var/nirvashare:/var/nirvashare
      
    depends_on:
      - admin

  search:
    image: 'nirvato/nirvashare-search-test:latest'
    container_name: 'nirvashare_search_test'
    networks:
      - nirvashare
    restart: always
#    ports:
#      # Public HTTP Port:
#      - '8081:8080'
    environment:
      ns_db_jdbc_url: "jdbc:postgresql://nirvashare_database_test:5432/postgres"
      ns_db_username: "nirvashare"
      ns_db_password_file: "/run/secrets/db_password"
      
    secrets:
      - db_password

    volumes:
      - /var/nirvashare:/var/nirvashare
      
    depends_on:
      - admin



  db:
   image: 'postgres:13.2'
   networks:
      - nirvashare
   container_name: 'nirvashare_database_test'
   restart: always
#   ports:
#        - '5432:5432'
   environment:
#     POSTGRES_PASSWORD: '__DB_PASS__'
     POSTGRES_USER: 'nirvashare'
     POSTGRES_PASSWORD_FILE: /run/secrets/db_password
     
   secrets:
     - db_password

   volumes:
      - db_data:/var/lib/postgresql/data

secrets:
   db_password:
     file: dbpass

volumes:
   db_data:

networks:
  nirvashare: {}

